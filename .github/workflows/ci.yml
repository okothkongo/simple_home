name: CI

on: [pull_request, push]

permissions:
  contents: read

jobs:
  test:
    name: Test and lint
    runs-on: ubuntu-20.04
    services:
      db:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: simple_home_test
        ports: ['5432:5432']
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    strategy:
      fail-fast: false
      matrix:
        include:
          - erlang: "25.2.2"
            elixir: "1.14.3"
    steps:
    - uses: actions/checkout@v3
    - name: Set up Elixir
      uses: erlef/setup-beam@988e02bfe678367a02564f65ca2e37726dc0268f
      with:
          otp-version: ${{matrix.erlang}}
          elixir-version: ${{matrix.elixir}}
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-

    - name: Install dependencies
      if: steps.cache-deps.outputs.cache-hit != 'true'
      run: |
        mix deps.get
        mix deps.compile
    - name: Check for unused dependencies
      run: mix deps.get && mix deps.unlock --check-unused

    - name: Restore cached PLTs
      uses: actions/cache@v3
      id: plt_cache
      with:
        key: |
          ${{ runner.os }}-${{ matrix.elixir }}-${{ matrix.erlang }}-plt
        restore-keys: |
          ${{ runner.os }}-${{ matrix.elixir }}-${{ matrix.erlang }}-plt
        path: |
          priv/plts
    # Create PLTs if no cached PLTs were found
    - name: Create PLTs
      if: steps.plt_cache.outputs.cache-hit != 'true'
      run:  mix dialyzer --plt
    - name: Run dialyzer
      run: mix dialyzer

    # - name: Setup db
    #   run: mix ecto.create
    - name: Run tests
      run: mix test

    - name: linter
      run: mix credo